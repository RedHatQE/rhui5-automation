# file: roles/launchpad/tasks/main.yml
# install the RHUI 5 RHUA

- name: set hostname
  hostname: name="launchpad.example.com"
  when: "'LAUNCHPAD' in groups"
  tags: launchpad

- import_tasks: ssh_pre.yml
  tags: launchpad

- import_tasks: os_tweaks.yml
  tags: launchpad

- name: block for answers
  block:
  - name: copy the answers file to the launchpad
    copy:
      src: "{{ answers }}"
      dest: /tmp/answers.yaml
    become: "{{ ansible_os_family in families_that_need_root_for_containers }}"

  - name: add the answers file to the list of volumes
    set_fact:
      installer_volumes: "{{ installer_volumes + ['/tmp/answers.yaml:/answers.yaml:Z'] }}"
  when: answers is defined
  tags: launchpad,reinstall

- name: install a container management tool
  package:
    name: "{{ 'docker' if ansible_distribution in distros_that_need_docker else 'podman' }}"
    state: latest
    update_cache: True
  tags: launchpad

- name: start docker
  service:
    name: docker
    state: started
    enabled: True
  when: ansible_distribution in distros_that_need_docker
  tags: launchpad

- name: podman block for insecure registries
  block:
  - name: create the directory for container certs
    file:
      name: "/etc/containers/certs.d/{{ registry['hostname'] }}"
      state: directory
    tags: launchpad

  - name: copy the RH CA cert to this directory
    copy:
      src: /etc/rhsm/ca/redhat-uep.pem
      dest: "/etc/containers/certs.d/{{ registry['hostname'] }}/ca.crt"
      remote_src: True
    tags: launchpad
    register: copyrhcacert
    ignore_errors: True
  when: ansible_distribution not in distros_that_need_docker and registry['insecure'] | default(False) | bool
  tags: launchpad

- name: docker block for insecure registries
  block:
  - name: configure docker to treat the registry as insecure
    copy:
      content: "{ \"insecure-registries\" : [ \"{{ registry['hostname'] }}\" ] }"
      dest: /etc/docker/daemon.json
    register: dockerconfig
    tags: launchpad

  - name: re/start docker
    service:
      name: docker
      state: "{{ 'restarted' if dockerconfig is changed else 'started' }}"
    tags: launchpad
  when: ansible_distribution in distros_that_need_docker and registry['insecure'] | default(False) | bool
  tags: launchpad

- name: enable lingering
  command: "loginctl enable-linger {{ ansible_env.SUDO_USER }}"
  when: ansible_distribution not in distros_that_need_docker
  tags: launchpad

- name: temporarily move the directory with test files prior to cloning
  command: mv /var/lib/rhui/root/test_files /root/
  args:
    creates: /root/test_files
    removes: /var/lib/rhui/root/test_files
  delegate_to: "{{ groups['RHUA'][0] }}"
  when: clone | default(False)
  tags: launchpad

- name: log in to the registry using podman
  containers.podman.podman_login:
    registry: "{{ registry['hostname'] }}"
    username: "{{ registry['username'] }}"
    password: "{{ registry['password'] }}"
    tlsverify: "{{ not registry['insecure'] | default(False) | bool or copyrhcacert is defined and copyrhcacert is success }}"
  become: "{{ ansible_os_family in families_that_need_root_for_containers }}"
  when: ansible_distribution not in distros_that_need_docker
  tags: launchpad

- name: log in to the registry using docker
  community.docker.docker_login:
    registry_url: "{{ registry['hostname'] }}"
    username: "{{ registry['username'] }}"
    password: "{{ registry['password'] }}"
  when: ansible_distribution in distros_that_need_docker
  tags: launchpad

- name: launch the installer using podman
  containers.podman.podman_container:
    name: rhui_installer_task
    image: "{{ registry['hostname'] }}/{{ installer_image }}"
    tls_verify: "{{ not registry['insecure'] | default(False) | bool or copyrhcacert is defined and copyrhcacert is success }}"
    rm: True
    interactive: True
    tty: True
    volume: "{{ installer_volumes }}"
    command: "{{ installer_command }}"
  become: "{{ ansible_os_family in families_that_need_root_for_containers }}"
  when: ansible_distribution not in distros_that_need_docker
  tags: launchpad,reinstall

- name: launch the installer using docker
  community.docker.docker_container:
    name: rhui_installer_task
    image: "{{ registry['hostname'] }}/{{ installer_image }}"
    auto_remove: True
    interactive: True
    tty: True
    network_mode: host
    volumes: "{{ installer_volumes }}"
    command: "{{ installer_command }}"
  when: ansible_distribution in distros_that_need_docker
  tags: launchpad,reinstall

- name: wait for the RHUA service to start listening on port 443
  wait_for:
    host: "{{ 'another' if toanotherrhua | default(False) else '' }}rhua.example.com"
    port: 443
    delay: "{{ 45 if mig | default(False) else 10 }}"
  tags: launchpad,reinstall

- name: wait a bit more before checking rhui-manager
  pause:
    minutes: 1
  tags: launchpad,reinstall

- name: move the directory with test files back after cloning
  command: mv /root/test_files /var/lib/rhui/root/
  args:
    creates: /var/lib/rhui/root/test_files
    removes: /root/test_files
  delegate_to: "{{ groups['RHUA'][0] }}"
  when: clone | default(False)
  tags: launchpad

- name: check if rhui-manager can run
  shell: . /root/.bashrc ; rhua rhui-manager --noninteractive status ; true
  delegate_to: "{{ groups['ANOTHERRHUA' if toanotherrhua | default(False) else 'RHUA'][0] }}"
  register: rhuimanagercmd
  tags: launchpad,reinstall

- name: print the output from rhui-manager
  debug:
    var: rhuimanagercmd.stdout_lines
  tags: launchpad,reinstall

- import_tasks: ssh_post.yml
  tags: launchpad
